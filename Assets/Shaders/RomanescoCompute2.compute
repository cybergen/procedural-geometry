#pragma kernel CSMain

RWTexture2D<float4> Displace;
RWTexture2D<float4> Normal;
int Iterations;
int SpiralCount;
int HalfTextureSize;

[numthreads(8,8,1)]
void CSMain(int3 id : SV_DispatchThreadID)
{	
	//Center adjust
    float2 uv = id.xy / (2 * float(HalfTextureSize)) - 0.5;    
    float3 direction = float3(0, 0, 0);
    float pi = 3.14159265359;

    for (int i = 0; i < Iterations; i++)
    {
    	float radius = length(uv);
    	float logRadius = log(radius);
    	float theta = atan2(uv.x, uv.y);

    	float2 spiral = float2(theta - logRadius, theta + logRadius) / pi;
    	float cellr = floor(spiral.x * float(SpiralCount)) - floor(spiral.y * float(SpiralCount));    	

        float x = -sin(theta);
    	float z = -cos(theta);
    	float y = 0.5 - radius;
    	direction = normalize(float3(x, y, z));

        uv = frac(spiral * SpiralCount) - 0.5;
        theta += theta + 0.36;
    }

    Displace[id.xy] = float4(direction.xyz * 0.5 + 0.5, 1);
    Normal[id.xy] = float4(direction.xyz * 0.5 + 0.5, 1);
}
