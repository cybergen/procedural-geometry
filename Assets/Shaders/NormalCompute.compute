#pragma kernel CSMain

Texture2D<float4> Vertex;
RWTexture2D<float4> Normal;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	float3 centerVert = Vertex[id.xy].xyz;
	float3 vertTwo = float3(0, 0, 0);
	float3 vertThree = float3(0, 0, 0);
	uint2 temp = id.xy;
    if (id.x == 0) 
    {
    	temp.x += 1;
    	vertTwo = Vertex[temp];
    	temp.x -= 1;
    	if (id.y < 256)
    	{
    		temp.y += 1;
    		vertThree = Vertex[temp];
    		temp.y -= 1;
    	}
    	else
    	{
    		temp.y -= 1;
    		vertThree = Vertex[temp];
    		temp.y += 1;
    	}
    }
    else if (id.x > 0 && id.x < 256)
    {
		temp.x += 1;
    	vertTwo = Vertex[temp];
    	temp.x -= 2;
    	vertThree = Vertex[temp];
    	temp.x += 1;
    }
    else
    {
    	temp.x -= 1;
    	vertTwo = Vertex[temp];
    	temp.x += 1;
    	if (id.y < 256)
    	{
    		temp.y += 1;
    		vertThree = Vertex[temp];
    		temp.y -= 1;
    	}
    	else
    	{
    		temp.y -= 1;
    		vertThree = Vertex[temp];
    		temp.y += 1;
    	}
    }

   	float3 crossOne = cross(vertTwo - centerVert, vertThree - centerVert);
   	float3 norm = normalize(crossOne);
   	Normal[id.xy] = float4((norm / 2 + 0.5).xyz, 0);
}
