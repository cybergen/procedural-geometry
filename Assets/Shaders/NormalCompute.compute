#pragma kernel CSMain

RWTexture2D<float4> Vertex;
RWTexture2D<float4> Normal;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	float4 normal = float4(1, 1, 1, 1);
    Normal[id.xy] = normal / 2 + 0.5;

	float4 centerVert = Vertex[id.xy];
	float4 vertTwo = float4(0, 0, 0, 0);
	float4 vertThree = float4(0, 0, 0, 0);
    if (id.x == 0) 
    { 
    	vertTwo = Vertex[id.x + 1, id.y];
    	if (id.y < 256)
    	{
    		vertThree = Vertex[id.x, id.y + 1];
    	}
    	else
    	{
    		vectThree = Vertex[id.x, id.y - 1];
    	}
    }
    else if (id.x > 0 && id.x < 256)
    {
    	vertTwo = Vertex[id.x + 1, id.y];
    	vertThree = Vertex[id.x - 1,  id.y];
    }
    else
    {
    	vertTwo = Vertex[id.x - 1, id.y];
    	if (id.y < 256)
    	{
    		vertThree = Vertex[id.x, id.y + 1];
    	}
    	else
    	{
    		vectThree = Vertex[id.x, id.y - 1];
    	}
    }

   	float4 crossOne = cross(centerVert, vertTwo);
   	float4 crossTwo = cross(centerVert, vertThree);
   	float4 norm = normalize((crossOne + crossTwo) / 2);
   	Normal[id.xy] = norm / 2 + 0.5;
}
